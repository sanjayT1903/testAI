{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":194069625,"sourceType":"kernelVersion"}],"dockerImageVersionId":30762,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport torch\nimport torch.nn as nn\nimport matplotlib.pyplot as plt\nimport random\nfrom torch.optim import LBFGS\nfrom tqdm import tqdm\n\nfrom utility_py import *\n\nclass PINNs(nn.Module):\n    def __init__(self, in_dim, hidden_dim, out_dim, num_layer):\n        super(PINNs, self).__init__()\n\n        layers = []\n        for i in range(num_layer-1):\n            if i == 0:\n                layers.append(nn.Linear(in_features=in_dim, out_features=hidden_dim))\n                layers.append(nn.Tanh())\n            else:\n                layers.append(nn.Linear(in_features=hidden_dim, out_features=hidden_dim))\n                layers.append(nn.Tanh())\n\n        layers.append(nn.Linear(in_features=hidden_dim, out_features=out_dim))\n\n        self.linear = nn.Sequential(*layers)\n\n    def forward(self, x, t):\n        src = torch.cat((x,t), dim=-1)\n        return self.linear(src)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-09-08T20:31:02.952402Z","iopub.execute_input":"2024-09-08T20:31:02.952712Z","iopub.status.idle":"2024-09-08T20:31:04.600723Z","shell.execute_reply.started":"2024-09-08T20:31:02.952678Z","shell.execute_reply":"2024-09-08T20:31:04.599838Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"# implementation of PINNsformer\n# paper: PINNsFormer: A Transformer-Based Framework For Physics-Informed Neural Networks\n# link: https://arxiv.org/abs/2307.11833\n\nimport pdb\n\n#from utility_py import get_clones\n\nclass WaveAct(nn.Module):\n    def __init__(self):\n        super(WaveAct, self).__init__() \n        self.w1 = nn.Parameter(torch.ones(1), requires_grad=True)\n        self.w2 = nn.Parameter(torch.ones(1), requires_grad=True)\n\n    def forward(self, x):\n        return self.w1 * torch.sin(x)+ self.w2 * torch.cos(x)\n\nclass FeedForward(nn.Module):\n    def __init__(self, d_model, d_ff=256):\n        super(FeedForward, self).__init__() \n        self.linear = nn.Sequential(*[\n            nn.Linear(d_model, d_ff),\n            WaveAct(),\n            nn.Linear(d_ff, d_ff),\n            WaveAct(),\n            nn.Linear(d_ff, d_model)\n        ])\n\n    def forward(self, x):\n        return self.linear(x)\n\n\nclass EncoderLayer(nn.Module):\n    def __init__(self, d_model, heads):\n        super(EncoderLayer, self).__init__()\n\n        self.attn = nn.MultiheadAttention(embed_dim=d_model, num_heads=heads, batch_first=True)\n        self.ff = FeedForward(d_model)\n        self.act1 = WaveAct()\n        self.act2 = WaveAct()\n        \n    def forward(self, x):\n        x2 = self.act1(x)\n        # pdb.set_trace()\n        x = x + self.attn(x2,x2,x2)[0]\n        x2 = self.act2(x)\n        x = x + self.ff(x2)\n        return x\n\n\nclass DecoderLayer(nn.Module):\n    def __init__(self, d_model, heads):\n        super(DecoderLayer, self).__init__()\n\n        self.attn = nn.MultiheadAttention(embed_dim=d_model, num_heads=heads, batch_first=True)\n        self.ff = FeedForward(d_model)\n        self.act1 = WaveAct()\n        self.act2 = WaveAct()\n\n    def forward(self, x, e_outputs): \n        x2 = self.act1(x)\n        x = x + self.attn(x2, e_outputs, e_outputs)[0]\n        x2 = self.act2(x)\n        x = x + self.ff(x2)\n        return x\n\n\nclass Encoder(nn.Module):\n    def __init__(self, d_model, N, heads):\n        super(Encoder, self).__init__()\n        self.N = N\n        self.layers = get_clones(EncoderLayer(d_model, heads), N)\n        self.act = WaveAct()\n\n    def forward(self, x):\n        for i in range(self.N):\n            x = self.layers[i](x)\n        return self.act(x)\n\nclass Decoder(nn.Module):\n    def __init__(self, d_model, N, heads):\n        super(Decoder, self).__init__()\n        self.N = N\n        self.layers = get_clones(DecoderLayer(d_model, heads), N)\n        self.act = WaveAct()\n        \n    def forward(self, x, e_outputs):\n        for i in range(self.N):\n            x = self.layers[i](x, e_outputs)\n        return self.act(x)\n\n\n\nclass PINNsformer(nn.Module):\n    def __init__(self, d_out, d_model, d_hidden, N, heads):\n        super(PINNsformer, self).__init__()\n\n        self.linear_emb = nn.Linear(2, d_model)\n\n        self.encoder = Encoder(d_model, N, heads)\n        self.decoder = Decoder(d_model, N, heads)\n        self.linear_out = nn.Sequential(*[\n            nn.Linear(d_model, d_hidden),\n            WaveAct(),\n            nn.Linear(d_hidden, d_hidden),\n            WaveAct(),\n            nn.Linear(d_hidden, d_out)\n        ])\n\n    def forward(self, x, t):\n        src = torch.cat((x,t), dim=-1)\n        src = self.linear_emb(src)\n\n        e_outputs = self.encoder(src)\n        d_output = self.decoder(src, e_outputs)\n        output = self.linear_out(d_output)\n        # pdb.set_trace()\n        # raise Exception('stop')\n        return output","metadata":{"execution":{"iopub.status.busy":"2024-09-08T20:31:04.602108Z","iopub.execute_input":"2024-09-08T20:31:04.602526Z","iopub.status.idle":"2024-09-08T20:31:04.625539Z","shell.execute_reply.started":"2024-09-08T20:31:04.602490Z","shell.execute_reply":"2024-09-08T20:31:04.624453Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"a = 0.4  # Thermal diffusivity\nL = 1  # Length of the bar\nn = 1  # Frequency of the sinusoidal initial conditions\n# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n# model = model.to(device)\n\n\ndef heat_eq_exact_solution(x, t):\n    \"\"\"Returns the exact solution for a given x and t (for sinusoidal initial conditions).\n\n    Parameters\n    ----------\n    x : np.ndarray\n    t : np.ndarray\n    \"\"\"\n    return np.exp(-(n**2 * np.pi**2 * a * t) / (L**2)) * np.sin(n * np.pi * x / L)\n\ndef gen_exact_solution():\n    \"\"\"Generates exact solution for the heat equation for the given values of x and t.\"\"\"\n    # Number of points in each dimension:\n    x_dim, t_dim = (256, 201)\n\n    # Bounds of 'x' and 't':\n    x_min, t_min = (0, 0.0)\n    x_max, t_max = (L, 1.0)\n\n    # Create tensors:\n    t = np.linspace(t_min, t_max, num=t_dim).reshape(t_dim, 1)\n    x = np.linspace(x_min, x_max, num=x_dim).reshape(x_dim, 1)\n    usol = np.zeros((x_dim, t_dim)).reshape(x_dim, t_dim)\n\n    # Obtain the value of the exact solution for each generated point:\n    for i in range(x_dim):\n        for j in range(t_dim):\n            usol[i][j] = heat_eq_exact_solution(x[i], t[j])\n\n    # Save solution:\n    np.savez(\"heat_eq_data\", x=x, t=t, usol=usol)\n\n\ndef gen_testdata():\n    \"\"\"Import and preprocess the dataset with the exact solution.\"\"\"\n    # Load the data:\n    data = np.load(\"heat_eq_data.npz\")\n    # Obtain the values for t, x, and the excat solution:\n    t, x, exact = data[\"t\"], data[\"x\"], data[\"usol\"].T\n    # Process the data and flatten it out (like labels and features):\n    xx, tt = np.meshgrid(x, t)\n    X = np.vstack((np.ravel(xx), np.ravel(tt))).T\n    y = exact.flatten()[:, None]\n    return X, y\n\ngen_exact_solution()","metadata":{"execution":{"iopub.status.busy":"2024-09-08T20:31:04.626992Z","iopub.execute_input":"2024-09-08T20:31:04.627386Z","iopub.status.idle":"2024-09-08T20:31:05.446757Z","shell.execute_reply.started":"2024-09-08T20:31:04.627337Z","shell.execute_reply":"2024-09-08T20:31:05.445959Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_219/3867972684.py:35: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n  usol[i][j] = heat_eq_exact_solution(x[i], t[j])\n","output_type":"stream"}]},{"cell_type":"code","source":"seed = 1\nnp.random.seed(seed)\nrandom.seed(seed)\ntorch.manual_seed(seed)\ntorch.cuda.manual_seed(seed)\ntorch.cuda.is_available() \n\ndevice = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\nprint(device)\nstep_size = 1e-4","metadata":{"execution":{"iopub.status.busy":"2024-09-08T20:31:05.449683Z","iopub.execute_input":"2024-09-08T20:31:05.450037Z","iopub.status.idle":"2024-09-08T20:31:05.479121Z","shell.execute_reply.started":"2024-09-08T20:31:05.450001Z","shell.execute_reply":"2024-09-08T20:31:05.478270Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"cuda:0\n","output_type":"stream"}]},{"cell_type":"code","source":"# # Train PINNsformer\n# res, b_left, b_right, b_upper, b_lower = get_data([0,L], [0,1], 51, 51)\n# res_test, _, _, _, _ = get_data([0,L], [0,1], 101, 101)\n\n# res = make_time_sequence(res, num_step=5, step=1e-4)\n# b_left = make_time_sequence(b_left, num_step=5, step=1e-4)\n# b_right = make_time_sequence(b_right, num_step=5, step=1e-4)\n# b_upper = make_time_sequence(b_upper, num_step=5, step=1e-4)\n# b_lower = make_time_sequence(b_lower, num_step=5, step=1e-4)\n\n# res = torch.tensor(res, dtype=torch.float32, requires_grad=True).to(device)\n# b_left = torch.tensor(b_left, dtype=torch.float32, requires_grad=True).to(device)\n# b_right = torch.tensor(b_right, dtype=torch.float32, requires_grad=True).to(device)\n# b_upper = torch.tensor(b_upper, dtype=torch.float32, requires_grad=True).to(device)\n# b_lower = torch.tensor(b_lower, dtype=torch.float32, requires_grad=True).to(device)\n\n# x_res, t_res = res[:,:,0:1], res[:,:,1:2]\n# x_left, t_left = b_left[:,:,0:1], b_left[:,:,1:2]\n# x_right, t_right = b_right[:,:,0:1], b_right[:,:,1:2]\n# x_upper, t_upper = b_upper[:,:,0:1], b_upper[:,:,1:2]\n# x_lower, t_lower = b_lower[:,:,0:1], b_lower[:,:,1:2]\n\n# def init_weights(m):\n#     if isinstance(m, nn.Linear):\n#         torch.nn.init.xavier_uniform(m.weight)\n#         m.bias.data.fill_(0.01)","metadata":{"execution":{"iopub.status.busy":"2024-09-08T20:31:05.480226Z","iopub.execute_input":"2024-09-08T20:31:05.480505Z","iopub.status.idle":"2024-09-08T20:31:05.485681Z","shell.execute_reply.started":"2024-09-08T20:31:05.480475Z","shell.execute_reply":"2024-09-08T20:31:05.484765Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"\nres, b_left, b_right, _, _ = get_data([0, L], [0, 1], 51, 51)\nres_test, _, _, _, _ = get_data([0, L], [0, 1], 101, 101)\n\n# Define the initial condition for u(x, 0)\ndef u_init(x):\n   \n    return np.sin(n * np.pi * x / L)\nprint(res[:, 0])\n\n# Apply the initial condition to the spatial points at t=0\ninit_cond = u_init(res[:, 0])  # Assuming t=0 corresponds to the first time point\n\n# Extend time sequence\nres = make_time_sequence(res, num_step=5, step=1e-4)\nb_left = make_time_sequence(b_left, num_step=5, step=1e-4)\nb_right = make_time_sequence(b_right, num_step=5, step=1e-4)\n\n# Convert to PyTorch tensors\nres = torch.tensor(res, dtype=torch.float32, requires_grad=True).to(device)\nb_left = torch.tensor(b_left, dtype=torch.float32, requires_grad=True).to(device)\nb_right = torch.tensor(b_right, dtype=torch.float32, requires_grad=True).to(device)\n\n# Initial condition as tensor\ninit_cond = torch.tensor(init_cond, dtype=torch.float32).to(device)\n\n# Separate spatial (x) and temporal (t) components\nx_res, t_res = res[:, :, 0:1], res[:, :, 1:2]\nx_left, t_left = b_left[:, :, 0:1], b_left[:, :, 1:2]\nx_right, t_right = b_right[:, :, 0:1], b_right[:, :, 1:2]\n\n\n\n# Boundary conditions:\n# You will now have to impose boundary conditions as part of your training loss.\n# For example, if u(0, t) = 0 and u(L, t) = 0 (Dirichlet conditions), include them in the loss function.\n\n# Initialize model weights\ndef init_weights(m):\n    if isinstance(m, nn.Linear):\n        torch.nn.init.xavier_uniform_(m.weight)\n        m.bias.data.fill_(0.01)\n\n# # Define loss function (for PINNs)\n# def loss_function(model_output, x_res, t_res, init_cond, b_left, b_right):\n#     # 1. PDE residual loss (based on the heat equation)\n#     # Compute u(x,t) from the model, then compute the PDE residual\n#     u = model_output(x_res, t_res)\n#     u_t = torch.autograd.grad(u, t_res, grad_outputs=torch.ones_like(u), create_graph=True)[0]\n#     u_xx = torch.autograd.grad(torch.autograd.grad(u, x_res, grad_outputs=torch.ones_like(u), create_graph=True)[0], x_res, grad_outputs=torch.ones_like(u), create_graph=True)[0]\n    \n#     residual_loss = torch.mean((u_t - alpha * u_xx) ** 2)\n\n#     # 2. Initial condition loss: enforce u(x, 0) = f(x)\n#     init_loss = torch.mean((u[:, 0, :] - init_cond) ** 2)  # Check the axis indexing if necessary\n\n#     # 3. Boundary conditions: enforce Dirichlet BCs (u(0,t) = u(L,t) = 0)\n#     left_bc_loss = torch.mean((u(x_left, t_left)) ** 2)\n#     right_bc_loss = torch.mean((u(x_right, t_right)) ** 2)\n\n#     # Combine the losses\n#     total_loss = residual_loss + init_loss + left_bc_loss + right_bc_loss\n#     return total_loss\n","metadata":{"execution":{"iopub.status.busy":"2024-09-08T21:30:57.699233Z","iopub.execute_input":"2024-09-08T21:30:57.700152Z","iopub.status.idle":"2024-09-08T21:30:57.717768Z","shell.execute_reply.started":"2024-09-08T21:30:57.700107Z","shell.execute_reply":"2024-09-08T21:30:57.716704Z"},"trusted":true},"execution_count":54,"outputs":[{"name":"stdout","text":"[0.   0.02 0.04 ... 0.96 0.98 1.  ]\n","output_type":"stream"}]},{"cell_type":"code","source":"model = PINNsformer(d_out=1, d_hidden=512, d_model=32, N=1, heads=2).to(device)\nimport torch.optim as optimer\nmodel.apply(init_weights)\noptim = LBFGS(model.parameters(), line_search_fn='strong_wolfe')\n#optim = optimer.Adam(model.parameters(), lr=1e-4)\n\nprint(model)\nprint(get_n_params(model))","metadata":{"execution":{"iopub.status.busy":"2024-09-08T21:39:41.576049Z","iopub.execute_input":"2024-09-08T21:39:41.576455Z","iopub.status.idle":"2024-09-08T21:39:41.599137Z","shell.execute_reply.started":"2024-09-08T21:39:41.576407Z","shell.execute_reply":"2024-09-08T21:39:41.598158Z"},"trusted":true},"execution_count":72,"outputs":[{"name":"stdout","text":"PINNsformer(\n  (linear_emb): Linear(in_features=2, out_features=32, bias=True)\n  (encoder): Encoder(\n    (layers): ModuleList(\n      (0): EncoderLayer(\n        (attn): MultiheadAttention(\n          (out_proj): NonDynamicallyQuantizableLinear(in_features=32, out_features=32, bias=True)\n        )\n        (ff): FeedForward(\n          (linear): Sequential(\n            (0): Linear(in_features=32, out_features=256, bias=True)\n            (1): WaveAct()\n            (2): Linear(in_features=256, out_features=256, bias=True)\n            (3): WaveAct()\n            (4): Linear(in_features=256, out_features=32, bias=True)\n          )\n        )\n        (act1): WaveAct()\n        (act2): WaveAct()\n      )\n    )\n    (act): WaveAct()\n  )\n  (decoder): Decoder(\n    (layers): ModuleList(\n      (0): DecoderLayer(\n        (attn): MultiheadAttention(\n          (out_proj): NonDynamicallyQuantizableLinear(in_features=32, out_features=32, bias=True)\n        )\n        (ff): FeedForward(\n          (linear): Sequential(\n            (0): Linear(in_features=32, out_features=256, bias=True)\n            (1): WaveAct()\n            (2): Linear(in_features=256, out_features=256, bias=True)\n            (3): WaveAct()\n            (4): Linear(in_features=256, out_features=32, bias=True)\n          )\n        )\n        (act1): WaveAct()\n        (act2): WaveAct()\n      )\n    )\n    (act): WaveAct()\n  )\n  (linear_out): Sequential(\n    (0): Linear(in_features=32, out_features=512, bias=True)\n    (1): WaveAct()\n    (2): Linear(in_features=512, out_features=512, bias=True)\n    (3): WaveAct()\n    (4): Linear(in_features=512, out_features=1, bias=True)\n  )\n)\n453561\n","output_type":"stream"}]},{"cell_type":"code","source":"#print(x_res)\ndef check_nan(tensor, name):\n    if torch.isnan(tensor).any():\n        print(f\"NaNs detected in {name}\")\nloss_track = []\na = 0.4  # Thermal diffusivity\nL = 1  # Length of the bar\nn = 1  # Frequency of the sinusoidal initial conditions\n\nfor i in tqdm(range(500)):\n    def closure():\n        pred_res = model(x_res, t_res)\n        pred_left = model(x_left, t_left)\n        pred_right = model(x_right, t_right)\n        #print(pred_res)\n        pred_res_t0 = pred_res[:, 0, :]\n        \n        #pred_upper = model(x_upper, t_upper)\n        #\n        #pred_lower = model(x_lower, t_lower)\n\n#         u_x = torch.autograd.grad(pred_res, x_res, grad_outputs=torch.ones_like(pred_res), retain_graph=True, create_graph=True)[0]\n#         u_t = torch.autograd.grad(pred_res, t_res, grad_outputs=torch.ones_like(pred_res), retain_graph=True, create_graph=True)[0]\n\n#         loss_res = torch.mean((u_t - 5 * pred_res * (1-pred_res)) ** 2)\n\n        u_x = torch.autograd.grad(pred_res, x_res, grad_outputs=torch.ones_like(pred_res), retain_graph=True, create_graph=True)[0]\n        u_xx = torch.autograd.grad(u_x, x_res, grad_outputs=torch.ones_like(u_x), retain_graph=True, create_graph=True)[0]\n        u_t = torch.autograd.grad(pred_res, t_res, grad_outputs=torch.ones_like(pred_res), retain_graph=True, create_graph=True)[0]\n\n        \n        check_nan(u_x, 'u_x')\n        check_nan(u_xx, 'u_xx')\n        check_nan(u_t, 'u_t')\n        # Heat equation: ∂u/∂t = alpha * ∂²u/∂x²\n        alpha =a   # thermal diffusivity (can be modified)\n        loss_res =torch.mean((u_t - alpha * u_xx)**2 )\n        \n        loss_ic = torch.mean((pred_res_t0- init_cond) ** 2)  # Check the axis indexing if necessary\n\n        # 3. Boundary conditions: enforce Dirichlet BCs (u(0,t) = u(L,t) = 0)\n        left_bc_loss = torch.mean(pred_left ** 2)\n        right_bc_loss = torch.mean(pred_right ** 2)\n        #loss_bc =  torch.mean((pred_left-pred_right) ** 2)\n\n        #print(loss_res)\n        loss_track.append([loss_res.item(), loss_ic.item(), left_bc_loss.item(), right_bc_loss.item()])\n\n        loss = loss_res + loss_ic + left_bc_loss + right_bc_loss\n        optim.zero_grad()\n        loss.backward()\n        return loss\n\n    optim.step(closure)\n    #print(loss_track)","metadata":{"execution":{"iopub.status.busy":"2024-09-08T22:00:47.449868Z","iopub.execute_input":"2024-09-08T22:00:47.450272Z","iopub.status.idle":"2024-09-08T22:01:39.962457Z","shell.execute_reply.started":"2024-09-08T22:00:47.450234Z","shell.execute_reply":"2024-09-08T22:01:39.961545Z"},"trusted":true},"execution_count":86,"outputs":[{"name":"stderr","text":"100%|██████████| 15/15 [00:52<00:00,  3.50s/it]\n","output_type":"stream"}]},{"cell_type":"code","source":"print(f\"Length of loss_track: {len(loss_track)}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-08T22:01:45.311138Z","iopub.execute_input":"2024-09-08T22:01:45.311552Z","iopub.status.idle":"2024-09-08T22:01:45.317264Z","shell.execute_reply.started":"2024-09-08T22:01:45.311512Z","shell.execute_reply":"2024-09-08T22:01:45.316175Z"},"trusted":true},"execution_count":87,"outputs":[{"name":"stdout","text":"Length of loss_track: 332\n","output_type":"stream"}]},{"cell_type":"code","source":"print('Loss Res: {:4f}, Loss_IC: {:4f}, Loss_BC_left: {:4f}, Loss_BC_right: {:4f}'.format(loss_track[-1][0], loss_track[-1][1], loss_track[-1][2], loss_track[-1][3]))\nprint('Train Loss: {:4f}'.format(np.sum(loss_track[-1])))\n\ntorch.save(model.state_dict(), './1dreaction_pinnsformer.pt')","metadata":{"execution":{"iopub.status.busy":"2024-09-08T22:01:48.190225Z","iopub.execute_input":"2024-09-08T22:01:48.191137Z","iopub.status.idle":"2024-09-08T22:01:48.207187Z","shell.execute_reply.started":"2024-09-08T22:01:48.191095Z","shell.execute_reply":"2024-09-08T22:01:48.206277Z"},"trusted":true},"execution_count":88,"outputs":[{"name":"stdout","text":"Loss Res: 0.002313, Loss_IC: 0.173941, Loss_BC_left: 0.004935, Loss_BC_right: 0.017803\nTrain Loss: 0.198992\n","output_type":"stream"}]},{"cell_type":"code","source":"\n\n# Convert loss_track to a NumPy array for easier slicing\nloss_track = np.array(loss_track)\n\n# Extract each loss component\nresidual_loss = loss_track[:, 0]\nboundary_condition_loss = loss_track[:, 1]\ninitial_condition_loss = loss_track[:, 2]\n\n# Plot loss components\nplt.figure(figsize=(12, 6))\nplt.plot(residual_loss, label='Residual Loss', color='r')\nplt.plot(boundary_condition_loss, label='Boundary Condition Loss', color='g')\nplt.plot(initial_condition_loss, label='Initial Condition Loss', color='b')\nplt.xlabel('Iteration')\nplt.ylabel('Loss')\nplt.title('Loss Components During Optimization')\nplt.legend()\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-08T21:49:13.494399Z","iopub.execute_input":"2024-09-08T21:49:13.495329Z","iopub.status.idle":"2024-09-08T21:49:13.824559Z","shell.execute_reply.started":"2024-09-08T21:49:13.495284Z","shell.execute_reply":"2024-09-08T21:49:13.823624Z"},"trusted":true},"execution_count":82,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"print(f\"Seed value: {seed}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-08T21:42:29.698856Z","iopub.execute_input":"2024-09-08T21:42:29.699700Z","iopub.status.idle":"2024-09-08T21:42:29.704890Z","shell.execute_reply.started":"2024-09-08T21:42:29.699632Z","shell.execute_reply":"2024-09-08T21:42:29.703812Z"},"trusted":true},"execution_count":77,"outputs":[{"name":"stdout","text":"Seed value: 1\n","output_type":"stream"}]},{"cell_type":"code","source":"torch.cuda.empty_cache()\n\n# Optionally, you can track memory usage\nprint(torch.cuda.memory_summary())","metadata":{"execution":{"iopub.status.busy":"2024-09-08T21:04:00.073616Z","iopub.execute_input":"2024-09-08T21:04:00.073945Z","iopub.status.idle":"2024-09-08T21:04:00.216488Z","shell.execute_reply.started":"2024-09-08T21:04:00.073913Z","shell.execute_reply":"2024-09-08T21:04:00.215443Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"|===========================================================================|\n|                  PyTorch CUDA memory summary, device ID 0                 |\n|---------------------------------------------------------------------------|\n|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |\n|===========================================================================|\n|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |\n|---------------------------------------------------------------------------|\n| Allocated memory      | 167960 KiB |   3570 MiB | 193619 GiB | 193619 GiB |\n|       from large pool | 164230 KiB |   3538 MiB | 190672 GiB | 190672 GiB |\n|       from small pool |   3730 KiB |     37 MiB |   2946 GiB |   2946 GiB |\n|---------------------------------------------------------------------------|\n| Active memory         | 167960 KiB |   3570 MiB | 193619 GiB | 193619 GiB |\n|       from large pool | 164230 KiB |   3538 MiB | 190672 GiB | 190672 GiB |\n|       from small pool |   3730 KiB |     37 MiB |   2946 GiB |   2946 GiB |\n|---------------------------------------------------------------------------|\n| Requested memory      | 165580 KiB |   3520 MiB | 190690 GiB | 190690 GiB |\n|       from large pool | 161921 KiB |   3488 MiB | 187749 GiB | 187748 GiB |\n|       from small pool |   3659 KiB |     37 MiB |   2941 GiB |   2941 GiB |\n|---------------------------------------------------------------------------|\n| GPU reserved memory   | 208896 KiB |   3764 MiB |   3764 MiB |   3560 MiB |\n|       from large pool | 178176 KiB |   3724 MiB |   3724 MiB |   3550 MiB |\n|       from small pool |  30720 KiB |     40 MiB |     40 MiB |     10 MiB |\n|---------------------------------------------------------------------------|\n| Non-releasable memory |  40936 KiB | 326721 KiB |  66596 GiB |  66596 GiB |\n|       from large pool |  13946 KiB | 319618 KiB |  63488 GiB |  63488 GiB |\n|       from small pool |  26990 KiB |  35180 KiB |   3107 GiB |   3107 GiB |\n|---------------------------------------------------------------------------|\n| Allocations           |     273    |     873    |   44291 K  |   44291 K  |\n|       from large pool |      84    |     473    |   24437 K  |   24437 K  |\n|       from small pool |     189    |     410    |   19854 K  |   19854 K  |\n|---------------------------------------------------------------------------|\n| Active allocs         |     273    |     873    |   44291 K  |   44291 K  |\n|       from large pool |      84    |     473    |   24437 K  |   24437 K  |\n|       from small pool |     189    |     410    |   19854 K  |   19854 K  |\n|---------------------------------------------------------------------------|\n| GPU reserved segments |      27    |     222    |     222    |     195    |\n|       from large pool |      12    |     202    |     202    |     190    |\n|       from small pool |      15    |      20    |      20    |       5    |\n|---------------------------------------------------------------------------|\n| Non-releasable allocs |      59    |     191    |   27983 K  |   27982 K  |\n|       from large pool |       7    |     146    |   16899 K  |   16899 K  |\n|       from small pool |      52    |      69    |   11083 K  |   11083 K  |\n|---------------------------------------------------------------------------|\n| Oversize allocations  |       0    |       0    |       0    |       0    |\n|---------------------------------------------------------------------------|\n| Oversize GPU segments |       0    |       0    |       0    |       0    |\n|===========================================================================|\n\n","output_type":"stream"}]},{"cell_type":"code","source":"# Check if CUDA (GPU) is available\n# Visualization for 1D heat equation\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate the test data with the correct dimensions for the heat equation\nres_test = make_time_sequence(res_test, num_step=5, step=1e-4) \nres_test = torch.tensor(res_test, dtype=torch.float32, requires_grad=True).to(device)\nx_test, t_test = res_test[:,:,0:1], res_test[:,:,1:2]\n\n# Predict using the model\nwith torch.no_grad():\n    pred = model(x_test, t_test)[:, 0:1]\n    pred = pred.cpu().detach().numpy()\n\n# Reshape the prediction to fit 101x101 grid (space and time)\npred = pred.reshape(101, 101)\n\n# Define analytical solution for the 1D heat equation\n# For the example: u(x, t) = e^(-n^2 * pi^2 * alpha * t) * sin(n * pi * x / L)\ndef u_ana(x, t, alpha=0.4, L=1, n=1):\n    return np.exp(-(n**2 * np.pi**2 * alpha * t) / (L**2)) * np.sin(n * np.pi * x / L)\n    #return np.exp(-n**2 * np.pi**2 * alpha * t) * np.sin(n * np.pi * x / L)\n\n# Get the test data again for analytical solution comparison\nres_test, _, _, _, _ = get_data([0, L], [0, 1], 101, 101)\n\n# Compute the analytical solution for the heat equation\nu = u_ana(res_test[:,0], res_test[:,1]).reshape(101, 101)\n\n# Compute relative errors (L1 and L2)\nrl1 = np.sum(np.abs(u - pred)) / np.sum(np.abs(u))\nrl2 = np.sqrt(np.sum((u - pred) ** 2) / np.sum(u ** 2))\n\nprint('Relative L1 error: {:4f}'.format(rl1))\nprint('Relative L2 error: {:4f}'.format(rl2))\n\n# Visualization of the predicted solution u(x,t)\nplt.figure(figsize=(4, 3))\nplt.imshow(pred, extent=[0, L, 1, 0], aspect='auto')\nplt.xlabel('x')\nplt.ylabel('t')\nplt.title('Predicted u(x,t) - 1D Heat Equation')\nplt.colorbar()\nplt.tight_layout()\nplt.savefig('./1dheat_pinnsformer_pred.png')\nplt.show()\n\n# Visualization of the analytical solution u_ana(x,t)\nplt.figure(figsize=(4, 3))\nplt.imshow(u, extent=[0, L, 1, 0], aspect='auto')\nplt.xlabel('x')\nplt.ylabel('t')\nplt.title('Analytical u(x,t) - 1D Heat Equation')\nplt.colorbar()\nplt.tight_layout()\nplt.savefig('./1dheat_analytical.png')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-09-08T21:50:12.504804Z","iopub.execute_input":"2024-09-08T21:50:12.505480Z","iopub.status.idle":"2024-09-08T21:50:13.654119Z","shell.execute_reply.started":"2024-09-08T21:50:12.505436Z","shell.execute_reply":"2024-09-08T21:50:13.653242Z"},"trusted":true},"execution_count":83,"outputs":[{"name":"stdout","text":"Relative L1 error: 2.629427\nRelative L2 error: 1.798904\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 400x300 with 2 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAYQAAAEiCAYAAAD5+KUgAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAACY/0lEQVR4nO29ebwdRZk+/lT3uUt2wpIF5kLCDrJEgskERFADERBFR2GAgYAgoKBIHCVhCwgmgDGGL4IZQUARfijMuHwgA8OWjyIZHLPMgAYcJJAMECAiSUhI7j3d7++PWrqquno759x77r2nn086p09VdXX1ud3vU8/7VlUzIiKUKFGiRImWh9fsBpQoUaJEif6BkhBKlChRogSAkhBKlChRooRASQglSpQoUQJASQglSpQoUUKgJIQSJUqUKAGgJIQSJUqUKCFQEkKJEiVKlABQEkKJEiVKlBAoCSEnJkyYgLPPPlt9X7p0KRhjWLp0adPaZMNuY6Pw5S9/Gccee2zD67WxePFi7L777ti+fXuvn6vE4MMrr7wCxhjuvvvuZjdlwGJAEMLdd98NxpjaOjs7se++++Liiy/Gm2++2ezmFcKSJUtwzTXXNLsZubFmzRrccccduPzyyxtW57x58/DLX/4yln722Weju7sb//Iv/9Kwc0m88cYbmD17Nj760Y9ixIgRqWQ+YcIEda95nocddtgBBx98MM4//3w8++yzuc95zDHH4KCDDnLmSeO1YMGCWi4nN5J+67Q2JW033HBDr7Y1L+677z4sWrSo2c0YlKg0uwFF8K1vfQsTJ07Etm3b8PTTT+MHP/gBlixZgueffx5Dhw7t07Z85CMfwfvvv4/29vZCxy1ZsgS33nrrgCGFm2++GRMnTsRHP/rRhtU5b948fO5zn8PJJ59spHd2dmLmzJlYuHAhvvKVr4Ax1rBzvvjii7jxxhuxzz774OCDD8ayZctSy0+aNAlf//rXAQCbN2/G6tWr8cADD+D222/HpZdeioULFzasbb2JpN86DaeddhpOOOGEWPoHP/jBBrasdtx33314/vnn8bWvfc1I32OPPfD++++jra2tOQ0bBBhQhHD88cfj8MMPBwCcd9552GmnnbBw4UL86le/wmmnneY8ZsuWLRg2bFjD2+J5Hjo7Oxteb39CT08P7r33Xlx44YV9ds5TTjkFN910E5566il87GMfa1i9kydPxl//+lfsuOOOePDBB/H5z38+tfxuu+2Gf/qnfzLSbrzxRpx++un43ve+h3322Qdf+tKXGta+/oTDDjssdu0DAdJ7UKJ2DAiXURKkwVizZg0A7nIYPnw4/vKXv+CEE07AiBEjcMYZZwAAwjDEokWL8IEPfACdnZ0YO3YsLrjgAvztb38z6iQiXH/99fi7v/s7DB06FB/96Efxxz/+MXbupBjCs88+ixNOOAGjR4/GsGHDcMghh+Dmm29W7bv11lsBwJDiEo1uowtJ7Xb5X59++mls2LAB06dPN8rOnDkTnZ2dWL16tZE+Y8YMjB49Gq+//nri+Rlj2LJlC3784x+r69fjHpMnT8aOO+6IX/3qV7muJy9GjBiBHXfcsa46hgwZgnvuuQc77rgjvv3tb6M3Fgp+99138bWvfQ1dXV3o6OjA3nvvjRtvvBFhGBrlFixYgCOOOAI77bQThgwZgsmTJ+PBBx80ymT91vUg6R6041jXXHONU+lJN/Arr7yi0n71q1/hxBNPxK677oqOjg7stddeuO666xAEgSpzzDHH4OGHH8arr76qrmnChAkAkmMITz75JI466igMGzYMO+ywAz796U/H7l3Zzpdeeglnn302dthhB4waNQrnnHMOtm7dWvfvNVAwoBSCjb/85S8AgJ122kmlVatVzJgxAx/+8IexYMEC5Uq64IILcPfdd+Occ87BV7/6VaxZswbf//73sXLlSvzud79TMvPqq6/G9ddfjxNOOAEnnHACVqxYgeOOOw7d3d2Z7XnsscfwyU9+EuPHj8cll1yCcePGYfXq1XjooYdwySWX4IILLsDrr7+Oxx57DPfcc0/s+L5oYxE888wzYIzFXAU333wznnzyScycORPLli2D7/v4l3/5F/zHf/wH7rnnHuy6666Jdd5zzz0477zzMGXKFJx//vkAgL322ssoc9hhh+F3v/tdQ6+lURg+fDg+85nP4Ec/+hH+9Kc/4QMf+EBq+SAIsGHDhli6TfIAsHXrVhx99NF47bXXcMEFF2D33XfHM888gzlz5uCNN94w/OY333wzPvWpT+GMM85Ad3c37r//fnz+85/HQw89hBNPPBFAvt/aha1btzrbvMMOO6BS4SajN+7Bu+++G8OHD8esWbMwfPhwPPnkk7j66quxadMmfOc73wEAXHHFFdi4cSP+7//+D9/73vcA8L9JEh5//HEcf/zx2HPPPXHNNdfg/fffxy233IIjjzwSK1asUGQiccopp2DixImYP38+VqxYgTvuuANjxozBjTfeWPN1DSjQAMBdd91FAOjxxx+nt99+m9atW0f3338/7bTTTjRkyBD6v//7PyIimjlzJgGg2bNnG8f/9re/JQB07733GumPPPKIkf7WW29Re3s7nXjiiRSGoSp3+eWXEwCaOXOmSnvqqacIAD311FNERFStVmnixIm0xx570N/+9jfjPHpdF110Ebl+9t5oowt2uyXWrFlDAOiuu+5Saf/0T/9EO+20k7OeRx99lADQ9ddfTy+//DINHz6cTj755NRzSwwbNiy1neeffz4NGTIkV1214IEHHnD+BhJ77LEHnXjiiYnHf+973yMA9Ktf/Sr1PEcffTQBSN2+853vqPLXXXcdDRs2jP785z8b9cyePZt836e1a9eqtK1btxpluru76aCDDqKPfexjRnrWb61D3gNJ27Jly4io2D04d+5c5/0un+k1a9YkXhMR0QUXXEBDhw6lbdu2qbQTTzyR9thjj8T26/fwpEmTaMyYMfTXv/5Vpf33f/83eZ5HZ511VqydX/jCF4w6P/OZzyQ+A4MRA8plNH36dOyyyy7o6urCP/7jP2L48OH4xS9+gd12280oZ/t2H3jgAYwaNQrHHnssNmzYoLbJkydj+PDheOqppwDw3kR3d3csoGkHr1xYuXIl1qxZg6997WvYYYcdjLw8wdG+aGNR/PWvf8Xo0aOdeccddxwuuOACfOtb38JnP/tZdHZ2Nmx00OjRo/H+++/3W6kue6SbN2/OLDthwgQ89thjse2nP/1prOwDDzyAo446CqNHjzbugenTpyMIAvzmN79RZYcMGaL2//a3v2Hjxo046qijsGLFirqv7/zzz3e2+cADDwTQe/egfk2bN2/Ghg0bcNRRR2Hr1q144YUXCtf3xhtvYNWqVTj77LMNd+EhhxyCY489FkuWLIkdY8fLjjrqKPz1r3/Fpk2bCp9/IGJAuYxuvfVW7LvvvqhUKhg7diz2228/eJ7JaZVKBX/3d39npP3v//4vNm7ciDFjxjjrfeuttwAAr776KgBgn332MfJ32WWXRMMoId1XScMMs9AXbawFlOInX7BgAX71q19h1apVuO+++xLbXus504j0vffew3vvvae++76PXXbZpSHnz4I874gRIzLLDhs2LBaDAWD4ziX+93//F//zP/+TeB3yHgCAhx56CNdffz1WrVplzNtoxMisffbZx9lmid66B//4xz/iyiuvxJNPPhkzwBs3bixcn2znfvvtF8s74IAD8Oijj8YGney+++5GOXk9f/vb3zBy5MjCbRhoGFCEMGXKFDXKKAkdHR0xkgjDEGPGjMG9997rPKavDEka+qqNSQZDD9xJ7LTTTk5ft8TKlSuVkXruuecSR3oVxd/+9jcMHTrU6DHaWLBgAa699lr1fY899nAa2d7A888/DwDYe++9G1pvGIY49thj8c1vftOZv++++wIAfvvb3+JTn/oUPvKRj+C2227D+PHj0dbWhrvuugv33XdfQ9tUL/Leb++++y6OPvpojBw5Et/61rew1157obOzEytWrMBll10WC6r3Fnzfd6andYwGEwYUIdSKvfbaC48//jiOPPLIVCOzxx57AOA9tT333FOlv/3226mGUZ4D4MYirXeV9ID0RRuBqMfz7rvvGumyN6Vj//33x7333ouNGzdi1KhRRt6WLVtwzjnn4MADD8QRRxyBm266CZ/5zGfwoQ99KLMNWb3YNWvW4IADDkgtc9ZZZ+HDH/6w+p72mzUS7733Hn7xi1+gq6srs41Fsddee+G9995LvX8A4F//9V/R2dmJRx99FB0dHSr9rrvuipVt5FwOiSL3oH6/6a5U+35bunQp/vrXv+Lf/u3f8JGPfESlyxGEOvJek2zniy++GMt74YUXsPPOO/fKkPSBjAEVQ6gVp5xyCoIgwHXXXRfLq1aryjhOnz4dbW1tuOWWW4weQZ5ZkYcddhgmTpyIRYsWxYytXpe8Ae0yfdFGgD8kvu8b/mgAuO2222Jlp02bBiLC8uXLY3mXXXYZ1q5dix//+MdYuHAhJkyYgJkzZ+ZadmLYsGGx69exYsUKHHHEEal17Lnnnpg+fbrajjzyyMzz1ov3338fZ555Jt555x1cccUVDTe2p5xyCpYtW4ZHH300lvfuu++iWq0C4L1YxpjRy37llVecM5KzfutaUOQelB0l/X6TQ2F1yJ65Xl93d7fzvhw2bFguF9L48eMxadIk/PjHPzZ+g+effx7/8R//4Zx81+poCYVw9NFH44ILLsD8+fOxatUqHHfccWhra8P//u//4oEHHsDNN9+Mz33uc9hll13wz//8z5g/fz4++clP4oQTTsDKlSvx7//+79h5551Tz+F5Hn7wgx/gpJNOwqRJk3DOOedg/PjxeOGFF/DHP/5RPeSTJ08GAHz1q1/FjBkz4Ps+/vEf/7FP2ggAo0aNwuc//3nccsstYIxhr732wkMPPWT4pyU+/OEPY6eddsLjjz9uTBJ78skncdttt2Hu3Lk47LDDAPDe6THHHIOrrroKN910kyqrjxGXmDx5Mh5//HEsXLgQu+66KyZOnIipU6cCAJYvX4533nkHn/70pzOvpSiuv/56AFBzNu655x48/fTTAIArr7zSKPvaa6+pwO97772HP/3pT3jggQewfv16fP3rX8cFF1zQ8PZ94xvfwK9//Wt88pOfxNlnn43Jkydjy5YteO655/Dggw/ilVdewc4774wTTzwRCxcuxCc+8QmcfvrpeOutt3Drrbdi7733xv/8z/8Ydab91klYsWKFM+i91157Ydq0aYXuweOOOw677747zj33XHzjG9+A7/u48847scsuu2Dt2rWq3BFHHIHRo0dj5syZ+OpXvwrGGO655x6nq2by5Mn42c9+hlmzZuFDH/oQhg8fjpNOOsl5Ld/5zndw/PHHY9q0aTj33HPVsNNRo0YNmNUC+hTNGt5UBHKI2n/913+llps5cyYNGzYsMf+HP/whTZ48mYYMGUIjRoyggw8+mL75zW/S66+/rsoEQUDXXnstjR8/noYMGULHHHMMPf/887THHnukDjuVePrpp+nYY4+lESNG0LBhw+iQQw6hW265ReVXq1X6yle+QrvssgsxxmJD8hrZxiS8/fbb9A//8A80dOhQGj16NF1wwQX0/PPPx4bsERF99atfpb333lt937RpE+2xxx502GGHUU9Pj1H20ksvJc/z1PBEIqKdd96Z/v7v/94o98ILL9BHPvIRGjJkSGyY4mWXXUa77767MZyxUUDKkEode+yxh0pnjNHIkSPpAx/4AH3xi1+kZ599Nvf5jj76aPrABz7gzJNDJPVhp0REmzdvpjlz5tDee+9N7e3ttPPOO9MRRxxBCxYsoO7ublXuRz/6Ee2zzz7U0dFB+++/P911113OIZ5pv3VSm5I2/dgi9+Dy5ctp6tSp1N7eTrvvvjstXLjQOez0d7/7Hf393/89DRkyhHbddVf65je/qYY368/Ze++9R6effjrtsMMOBEANQXUN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ZwyotYyysGHDBgRB4Fwi+4UXXnAek7Sk9vr163utnVmo5TpsXHbZZdh1111jD0NfopbrePrpp/GjH/1ILWfSbNRyDS+//DKefPJJnHHGGViyZAleeuklfPnLX0ZPTw/mzp3bF82OoZbrOP3007FhwwZ8+MMfBhGhWq3iwgsvxOWXX94XTW4Ialkyv5UxqBRCCY4bbrgB999/P37xi18MqEW6Nm/ejDPPPBO33347dt5552Y3p2aEYYgxY8bghz/8ISZPnoxTTz0VV1xxBRYvXtzsphXC0qVLMW/ePNx2221YsWIF/u3f/g0PP/wwrrvuumY3rUQvYVAphJ133hm+7zuXyB43bpzzmKQltZPK9wVquQ6JBQsW4IYbbsDjjz+OQw45pDebmYmi1/GXv/wFr7zyCk466SSVFob8JSWVSgUvvvgi9tprr95ttIVa/hbjx49HW1sbfN9XaQcccADWr1+P7u7upqyhX8t1XHXVVTjzzDNx3nnnAQAOPvhgbNmyBeeffz6uuOKKmlcT7UvUsmR+K6P//0ULoL29HZMnT8YTTzyh0sIwxBNPPJG4RPa0adOM8kD2ktq9jVquAwBuuukmXHfddXjkkUdw+OGH90VTU1H0Ovbff38899xzagXcVatW4VOf+hQ++tGPYtWqVejq6urL5gOo7W9x5JFH4qWXXlJkBgB//vOfMX78+Ka9UKWW69i6dWvM6EuSowGy4k1/fL77NZod1W407r//furo6KC7776b/vSnP9H5559PO+ywA61fv56IiM4880yaPXu2Kv+73/2OKpUKLViwgFavXk1z587tN8NOi1zHDTfcQO3t7fTggw/SG2+8obbNmzc36xKIqPh12OgPo4yKXsPatWtpxIgRdPHFF9OLL75IDz30EI0ZM4auv/76Zl0CERW/jrlz59KIESPo//v//j96+eWX6T/+4z9or732olNOOaVZl0CbN2+mlStX0sqVKwkALVy4kFauXEmvvvoqERHNnj2bzjzzTFVeDjv9xje+QatXr6Zbb721HHaagkFHCEREt9xyC+2+++7U3t5OU6ZMof/8z/9UeUcffTTNnDnTKP/zn/+c9t13X2pvb6cPfOAD9PDDD/dxi90och177LGHfEOusc2dO7fvG26h6N9DR38gBKLi1/DMM8/Q1KlTqaOjg/bcc0/69re/TdVqtY9bHUeR6+jp6aFrrrmG9tprL+rs7KSuri768pe/TH/729/6vuECTz31lPM+l+2eOXMmHX300bFjJk2aRO3t7bTnnnvSXXfd1eftHigoVzstUaJEiRIABlkMoUSJEiVK1I6SEEqUKFGiBICSEEqUKFGihEBJCCVKlChRAkBJCCVKlChRQqAkhBIlSpQoAaAkhBIlSpQoIVASQokSJUqUAFASQokSJUqUECgJoUSJEiVKACgJoUSJEiVKCJSEUGJQ4u2338a4ceMwb948lfbMM8+gvb09thxyiRIlOMrF7UoMWixZsgQnn3wynnnmGey3336YNGkSPv3pT2PhwoXNblqJEv0SJSGUGNS46KKL8Pjjj+Pwww/Hc889h//6r/9CR0dHs5tVokS/REkIJQY13n//fRx00EFYt24dli9fjoMPPrjZTSpRot+ijCGUGNT4y1/+gtdffx1hGOKVV15pdnNKlOjXKBVCiUGL7u5uTJkyBZMmTcJ+++2HRYsW4bnnnsOYMWOa3bQSJfolSkIoMWjxjW98Aw8++CD++7//G8OHD8fRRx+NUaNG4aGHHmp200qU6JcoXUYlBiWWLl2KRYsW4Z577sHIkSPheR7uuece/Pa3v8UPfvCDZjevRIl+iVIhlChRokQJAKVCKFGiRIkSAiUhlChRokQJACUhlChRokQJgZIQSpQoUaIEgJIQSpQoUaKEQEkIJUqUKFECQEkIJUqUKFFCoCSEEiVKlCgBoCSEEiVKlCghUBJCiRIlSpQAUBJCiRIlSpQQKAmhRIkSJUoAAP5/yGC312EyVvIAAAAASUVORK5CYII="},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 400x300 with 2 Axes>","image/png":""},"metadata":{}}]}]}